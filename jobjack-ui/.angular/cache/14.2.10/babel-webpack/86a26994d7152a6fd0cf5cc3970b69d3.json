{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component, ViewChild, ChangeDetectorRef, ElementRef } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { FormControl } from '@angular/forms';\nimport { filter, debounceTime, tap, distinctUntilChanged } from \"rxjs/operators\";\nimport { PaginatedSearchResultDto } from 'src/app/dto/paginated-search-result-dto';\nimport { SearchService } from 'src/app/search/services/search.service';\nimport { DirEntryDatasource } from 'src/app/search/components/dir-entry-datasource/dir-entry-datasource';\nlet SearchResultsComponent = class SearchResultsComponent {\n  constructor(searchService, cdRef) {\n    this.searchService = searchService;\n    this.cdRef = cdRef;\n    this.search = new PaginatedSearchResultDto();\n    this.term = new FormControl();\n    this.displayedColumns = ['path', 'size', 'name', 'permissions'];\n  }\n\n  ngOnInit() {\n    this.term.valueChanges.pipe(debounceTime(400)).pipe(distinctUntilChanged(), filter(term => term !== ''), tap(term => this.dataSource.searchDir(term)));\n    this.dataSource = new DirEntryDatasource(this.searchService);\n    this.dataSource.searchDir('/'); // this.dataSource.dir\n  }\n\n  ngAfterViewInit() {\n    this.term.valueChanges.pipe(debounceTime(150), distinctUntilChanged(), tap(() => {\n      this.paginator.pageIndex = 0;\n      this.loadDirEntryPage();\n    })).subscribe();\n    this.paginator.page.pipe(tap(() => this.loadDirEntryPage())).subscribe();\n  }\n\n  loadDirEntryPage() {\n    this.dataSource.searchDir(this.input.nativeElement.value, this.paginator.pageIndex + 1, this.paginator.pageSize);\n  }\n\n  setDataSourceAttributes() {// this.dataSource.paginator = this.paginator;\n  }\n\n  newResults(e) {\n    // this.resultLength = e.resultLength;\n    // this.dataSource.data = e.results;\n    // this.cdRef.detectChanges();\n    console.log(\"Datasource\", this.dataSource);\n    this.paginator.length = e.total;\n    this.paginator.pageIndex = e.page;\n    this.paginator.pageSize = e.size; // this.dataSource.paginator = this.paginator;\n  }\n\n  onPaginate(pageEvent) {\n    console.log(pageEvent); // this.search.size = pageEvent.pageSize;\n\n    this.search.page = pageEvent.pageIndex;\n    this.searchDir();\n  }\n\n  openDir(dir) {\n    if (dir.isDir) {\n      this.term.setValue(dir.path);\n    }\n  }\n\n  searchDir() {\n    this.searchService.searchDir(this.search).subscribe(res => {\n      this.search = res;\n      console.log(res);\n      this.newResults(res);\n    }, err => {\n      console.error(err);\n    });\n  }\n\n};\n\n__decorate([ViewChild(MatPaginator, {\n  static: true\n}), __metadata(\"design:type\", MatPaginator)], SearchResultsComponent.prototype, \"paginator\", void 0);\n\n__decorate([ViewChild('input'), __metadata(\"design:type\", ElementRef)], SearchResultsComponent.prototype, \"input\", void 0);\n\nSearchResultsComponent = __decorate([Component({\n  selector: 'app-dir-search-results',\n  templateUrl: './search-results.component.html'\n}), __metadata(\"design:paramtypes\", [SearchService, ChangeDetectorRef])], SearchResultsComponent);\nexport { SearchResultsComponent };","map":null,"metadata":{},"sourceType":"module"}