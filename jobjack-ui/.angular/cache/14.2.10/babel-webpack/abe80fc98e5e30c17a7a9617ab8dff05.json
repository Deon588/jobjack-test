{"ast":null,"code":"import { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormControl } from '@angular/forms';\nimport { filter, debounceTime, switchMap, distinctUntilChanged } from \"rxjs/operators\";\nimport { PaginatedSearchResultDto } from 'src/app/dto/paginated-search-result-dto';\nimport { SearchService } from 'src/app/search/services/search.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/search/services/search.service\";\nimport * as i2 from \"src/app/search/components/search-box/search-box.component\";\nexport let SearchResultsComponent = /*#__PURE__*/(() => {\n  class SearchResultsComponent {\n    constructor(searchService) {\n      this.searchService = searchService;\n      this.search = new PaginatedSearchResultDto();\n      this.term = new FormControl();\n      this.displayedColumns = ['path', 'size', 'name', 'permissions'];\n    }\n\n    ngOnInit() {\n      this.search.term = '/';\n      this.term.valueChanges.pipe(debounceTime(400)).pipe(distinctUntilChanged(), filter(term => term !== ''), switchMap(term => this.searchService.searchDir(this.search))).subscribe(res => {\n        this.search = res;\n        console.log(res); // this.searchChange.emit(res);\n      }, err => {\n        console.error(err);\n      }, () => {\n        console.log(`Completed`);\n      });\n    }\n\n    setDataSourceAttributes() {\n      this.dataSource.paginator = this.paginator;\n    }\n\n    newResults(e) {\n      // this.resultLength = e.resultLength;\n      this.dataSource = new MatTableDataSource(e); // this.dataSource.paginator = this.paginator;\n    }\n\n    onPaginate(e) {\n      console.log(e);\n    }\n\n  }\n\n  SearchResultsComponent.ɵfac = function SearchResultsComponent_Factory(t) {\n    return new (t || SearchResultsComponent)(i0.ɵɵdirectiveInject(i1.SearchService));\n  };\n\n  SearchResultsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SearchResultsComponent,\n    selectors: [[\"app-dir-search-results\"]],\n    viewQuery: function SearchResultsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n      }\n    },\n    decls: 6,\n    vars: 2,\n    consts: [[3, \"search\", \"searchChange\"]],\n    template: function SearchResultsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"app-search-box\", 0);\n        i0.ɵɵlistener(\"searchChange\", function SearchResultsComponent_Template_app_search_box_searchChange_1_listener($event) {\n          return ctx.search = $event;\n        })(\"searchChange\", function SearchResultsComponent_Template_app_search_box_searchChange_1_listener($event) {\n          return ctx.newResults($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"h1\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(4, \"br\")(5, \"br\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"search\", ctx.search);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"total \", ctx.search.total, \"\");\n      }\n    },\n    dependencies: [i2.SearchBoxComponent],\n    encapsulation: 2\n  });\n  return SearchResultsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}