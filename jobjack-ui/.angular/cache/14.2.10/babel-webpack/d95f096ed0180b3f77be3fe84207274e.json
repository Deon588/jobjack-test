{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormControl } from '@angular/forms';\nimport { filter, debounceTime, switchMap, distinctUntilChanged } from \"rxjs/operators\";\nimport { PaginatedSearchResultDto } from 'src/app/dto/paginated-search-result-dto';\nimport { SearchService } from 'src/app/search/services/search.service';\nlet SearchResultsComponent = class SearchResultsComponent {\n  constructor(searchService) {\n    this.searchService = searchService;\n    this.search = new PaginatedSearchResultDto();\n    this.term = new FormControl();\n    this.displayedColumns = ['path', 'size', 'name', 'permissions'];\n  }\n\n  ngOnInit() {\n    this.search.term = '/';\n    this.term.valueChanges.pipe(debounceTime(400)).pipe(distinctUntilChanged(), filter(term => term !== ''), switchMap(term => this.searchService.searchDir(this.search))).subscribe(res => {\n      this.search = res;\n      console.log(res); // this.searchChange.emit(res);\n    }, err => {\n      console.error(err);\n    }, () => {\n      console.log(`Completed`);\n    });\n  }\n\n  setDataSourceAttributes() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  newResults(e) {\n    // this.resultLength = e.resultLength;\n    this.dataSource = new MatTableDataSource(e); // this.dataSource.paginator = this.paginator;\n  }\n\n  onPaginate(e) {\n    console.log(e);\n  }\n\n};\n\n__decorate([ViewChild(MatPaginator, {\n  static: true\n}), __metadata(\"design:type\", MatPaginator)], SearchResultsComponent.prototype, \"paginator\", void 0);\n\nSearchResultsComponent = __decorate([Component({\n  selector: 'app-dir-search-results',\n  templateUrl: './search-results.component.html'\n}), __metadata(\"design:paramtypes\", [SearchService])], SearchResultsComponent);\nexport { SearchResultsComponent };","map":null,"metadata":{},"sourceType":"module"}