{"ast":null,"code":"import { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { SearchService } from 'src/app/search/services/search.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/search/services/search.service\";\nimport * as i2 from \"src/app/search/components/search-box/search-box.component\";\nexport let SearchResultsComponent = /*#__PURE__*/(() => {\n  class SearchResultsComponent {\n    constructor(searchService) {\n      this.searchService = searchService;\n      this.results = [];\n      this.resultLength = 0;\n      this.busy = false;\n      this.columnsToDisplay = [\"name\", \"path\", \"size\"];\n    }\n\n    setDataSourceAttributes() {\n      this.dataSource.paginator = this.paginator;\n    }\n\n    newResults(e) {\n      this.resultLength = e.resultLength;\n      this.dataSource = new MatTableDataSource(e);\n      this.dataSource.paginator = this.paginator;\n    }\n\n  }\n\n  SearchResultsComponent.ɵfac = function SearchResultsComponent_Factory(t) {\n    return new (t || SearchResultsComponent)(i0.ɵɵdirectiveInject(i1.SearchService));\n  };\n\n  SearchResultsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SearchResultsComponent,\n    selectors: [[\"app-dir-search-results\"]],\n    viewQuery: function SearchResultsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n      }\n    },\n    decls: 2,\n    vars: 0,\n    template: function SearchResultsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelement(1, \"app-search-box\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    dependencies: [i2.SearchBoxComponent],\n    encapsulation: 2\n  });\n  return SearchResultsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}