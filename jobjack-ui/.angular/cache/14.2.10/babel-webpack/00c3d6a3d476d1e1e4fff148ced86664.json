{"ast":null,"code":"import { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { PaginatedSearchResultDto } from 'src/app/dto/paginated-search-result-dto';\nimport { SearchService } from 'src/app/search/services/search.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/search/services/search.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/form-field\";\n\nfunction SearchResultsComponent_h1_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"total \", ctx_r0.search.total, \"\");\n  }\n}\n\nexport let SearchResultsComponent = /*#__PURE__*/(() => {\n  class SearchResultsComponent {\n    constructor(searchService) {\n      this.searchService = searchService;\n      this.search = new PaginatedSearchResultDto();\n      this.resultLength = 0;\n      this.searchResult = new PaginatedSearchResultDto();\n      this.displayedColumns = ['path', 'size', 'name', 'permissions'];\n    }\n\n    setDataSourceAttributes() {\n      this.dataSource.paginator = this.paginator;\n    }\n\n    newResults(e) {\n      this.resultLength = e.resultLength;\n      this.dataSource = new MatTableDataSource(e);\n      this.dataSource.paginator = this.paginator;\n    }\n\n  }\n\n  SearchResultsComponent.ɵfac = function SearchResultsComponent_Factory(t) {\n    return new (t || SearchResultsComponent)(i0.ɵɵdirectiveInject(i1.SearchService));\n  };\n\n  SearchResultsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SearchResultsComponent,\n    selectors: [[\"app-dir-search-results\"]],\n    viewQuery: function SearchResultsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n      }\n    },\n    decls: 6,\n    vars: 2,\n    consts: [[\"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"Search\", 3, \"formControl\"], [4, \"ngIf\"]],\n    template: function SearchResultsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\");\n        i0.ɵɵelement(2, \"input\", 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, SearchResultsComponent_h1_3_Template, 2, 1, \"h1\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"br\")(5, \"br\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formControl\", ctx.term);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.search.total);\n      }\n    },\n    dependencies: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlDirective, i3.MatFormField],\n    encapsulation: 2\n  });\n  return SearchResultsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}