pipeline {
    agent any
    options {
    gitlabBuilds(builds: ['build'])
}
    post {
        failure {
            updateGitlabCommitStatus name: 'build', state: 'failed'
        }
        unstable {
            updateGitlabCommitStatus name: 'build', state: 'failed'
        }
        aborted {
            updateGitlabCommitStatus name: 'build', state: 'canceled'
        }
        success {
            updateGitlabCommitStatus name: 'build', state: 'success'
        }
    }
    triggers {
        gitlab(triggerOnPush: true, triggerOnMergeRequest: true, branchFilterType: 'All', cancelPendingBuildsOnUpdate: true)
    }
    parameters {                
                string(name: 'app_version', defaultValue: 'latest', description: 'application version to build')
                string(name: 'app_name', defaultValue: 'nrs-ui', description: 'application name')
                string(name: 'sourceBranch', defaultValue: 'master', description: 'branch name')
    }
    stages {
                stage('checkout ${app_name} frontend') {
            steps {            
                // updateGitlabCommitStatus name: 'build', state: 'running'
                echo "checking out NRS frontend"
                checkout([$class: 'GitSCM', branches: [[name: "${sourceBranch}"]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: '${app_name}']], submoduleCfg: [], userRemoteConfigs: [[url: 'git@pgitap1zatcrh.vodacom.corp:XIB/nrs-ui.git']]])
            }
        }
    stage('build') {
        steps {
            echo "building ${app_name} docker image version ${app_version}"
            sh label: '', script: '''
            cd ./${app_name}
            npm install
            npm run build --prod
                docker system prune -a -f
                docker build --build-arg http_proxy=http://10.132.93.177:3128 --build-arg https_proxy=http://10.132.93.177:3128 -t ccsnexus.vodacom.corp/${app_name}:${app_version} .
                docker push ccsnexus.vodacom.corp/${app_name}:${app_version}
                docker rmi ccsnexus.vodacom.corp/${app_name}:${app_version}'''
            }
        }
        // stage('Deploy to QA') {
            // steps {
                // build job: "${app_name}-deploy-qa", parameters: [string(name: 'app_version', value: 'latest'), string(name: 'app_name', value: ${app_name})]
            // }
        // }
    }
}
